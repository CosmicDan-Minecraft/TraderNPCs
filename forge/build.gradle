import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"

    id 'com.matthewprenger.cursegradle'
    id "com.modrinth.minotaur"
}
loom {
    forge {
        mixinConfig "tradernpcs-common.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

def ENV = System.getenv();

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "forge"
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}



// from FAPI https://github.com/FabricMC/fabric/blob/1.16/build.gradle
curseforge {
    if (ENV.CURSEFORGE_API_KEY) {
        apiKey = ENV.CURSEFORGE_API_KEY
    }

    project {
        id = "550916"
        changelog = "A changelog can be found at https://github.com/samolego/TraderNPCs/releases/tag/${version}"
        releaseType = "release"
        addGameVersion "${project.minecraft_version}"
        addGameVersion "Forge"

        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}-forge.jar")) {
            displayName = "[${project.minecraft_version}] TraderNPCs ${version} [Forge]"
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

task modrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
    onlyIf {
        ENV.MODRINTH_TOKEN
    }

    token = ENV.MODRINTH_TOKEN
    projectId = "78ZQG4Et"
    versionNumber = project.minecraft_version + "+" + version + "-forge"
    changelog = "A changelog can be found at https://github.com/samolego/TraderNPCs/releases/tag/${version}"
    versionName = "[${project.minecraft_version}] TraderNPCs ${version} [Forge]"
    releaseType = "release"

    uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}-forge.jar")

    addGameVersion("${project.minecraft_version}")
    addLoader('forge')
}
